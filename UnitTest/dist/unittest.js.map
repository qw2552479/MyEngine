{"version":3,"sources":["src/TestAnimation.ts","src/TestComponent.ts","src/TestEvent.ts","src/TestFbxModel.ts","src/TestGeometry.ts","src/TestGetSet.ts","src/TestMinHeap.ts","src/TestResLoader.ts","src/TestSprite.ts","src/Testmatrix.ts","src/app.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAO,QAAQ,CAuGd;AAvGD,WAAO,QAAQ;IAMX,IAAO,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;IAC9B,IAAO,aAAa,GAAG,EAAE,CAAC,aAAa,CAAC;IACxC,IAAO,kBAAkB,GAAG,EAAE,CAAC,kBAAkB,CAAC;IAElD,IAAO,SAAS,GAAG,EAAE,CAAC,SAAS,CAAC;IAEhC,SAAgB,aAAa;QAEzB,IAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;QACxD,IAAM,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;QACxC,UAAU,CAAC,aAAa,qBAA2B,CAAC;QAEpD,IAAM,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC;QACxC,UAAU,CAAC,aAAa,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEpD,OAAO;QACP,IAAM,IAAI,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QAErB,IAAM,IAAI,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;QAEpC,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAgB,EAAE,CAAC,UAAU,CAAC,CAAC;QACnE,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC,CAAC;QAE7D,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,OAAO;QACP,IAAM,UAAU,GAAG,EAAE,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;QACpD,UAAU,CAAC,IAAI,GAAG,cAAc,CAAC;QAEjC,IAAM,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxD,UAAU,CAAC,IAAI,GAAG,YAAY,CAAC;QAE/B,IAAM,gBAAgB,GAAG,UAAU,CAAC,YAAY,CAAgB,EAAE,CAAC,UAAU,CAAC,CAAC;QAC/E,gBAAgB,CAAC,IAAI,GAAG,UAAU,CAAC;QACnC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC,CAAC;QAEnE,EAAE,CAAC,eAAe,CAAC,IAAI,CAAa,wBAAwB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAe;YAC/E,gBAAgB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;YAExF,UAAU,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7D,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAEhE,eAAe;YACf,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAW,QAAQ,CAAC,CAAC;YAEvD,UAAU;YACV,IAAM,cAAc,GAAG,IAAI,kBAAkB,EAAE,CAAC;YAEhD,SAAS;YACT,IAAM,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;YACpC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC;YAEtB,IAAM,OAAO,GAAG,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;YACxC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;YAErC,IAAM,OAAO,GAAG,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;YACxC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAEtC,IAAM,OAAO,GAAG,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;YACxC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAEpC,OAAO;YACP,QAAQ;YACR,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,mBAAmB,EAAE,OAAO,CAAC,CAAC;YACxG,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,mBAAmB,EAAE,OAAO,CAAC,CAAC;YACxG,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,mBAAmB,EAAE,OAAO,CAAC,CAAC;YAExG,IAAM,OAAO,GAAG,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;YACxC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAEpC,IAAM,OAAO,GAAG,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;YACxC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAEpC,IAAM,OAAO,GAAG,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC;YACxC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAO,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAEpC,EAAE;YACF,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;YACtG,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;YACtG,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;YAEtG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YAEtB,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAChC,QAAQ,CAAC,cAAc,GAAG,cAAc,CAAC;YAEzC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IA1Fe,sBAAa,gBA0F5B,CAAA;AACL,CAAC,EAvGM,QAAQ,KAAR,QAAQ,QAuGd;ACvGD,IAAO,QAAQ,CAyBd;AAzBD,WAAO,QAAQ;IAEX;QAA4B,iCAAY;QAAxC;YAAA,qEAUC;YARG,YAAM,GAAG;gBACL,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YACjD,CAAC,CAAC;YAEF,cAAQ,GAAG;gBACP,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;YACnD,CAAC,CAAC;;QAEN,CAAC;QAAD,oBAAC;IAAD,CAVA,AAUC,CAV2B,EAAE,CAAC,SAAS,GAUvC;IAED,SAAgB,aAAa;QAEzB,IAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;QAExD,IAAM,SAAS,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;QAEzC,IAAM,aAAa,GAAG,SAAS,CAAC,YAAY,CAAgB,aAAa,CAAC,CAAC;QAE3E,OAAO,aAAa,CAAC;IACzB,CAAC;IATe,sBAAa,gBAS5B,CAAA;AAEL,CAAC,EAzBM,QAAQ,KAAR,QAAQ,QAyBd;ACzBD,IAAO,QAAQ,CAiGd;AAjGD,WAAO,QAAQ;IACX;QAAA;QAoBA,CAAC;QAnBG,sBAAC,GAAD;YACI,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAChC,CAAC;QAED,uBAAE,GAAF,UAAG,CAAS;YACR,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;QACvC,CAAC;QAED,uBAAE,GAAF,UAAG,CAAS,EAAE,CAAS;YACnB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QACnD,CAAC;QAED,uBAAE,GAAF,UAAG,CAAS,EAAE,CAAS,EAAE,CAAS;YAC9B,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QAChE,CAAC;QAED,uBAAE,GAAF,UAAG,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;YACzC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7E,CAAC;QACL,iBAAC;IAAD,CApBA,AAoBC,IAAA;IAED,SAAgB,SAAS;QACrB,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,CAAC;QACR,KAAK,EAAE,CAAC;IACZ,CAAC;IANe,kBAAS,YAMxB,CAAA;IAED,SAAS,IAAI;QACT,IAAM,GAAG,GAAG,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAE7B,IAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,UAAU,CAAa,IAAI,UAAU,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACzF,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAElB,IAAM,SAAS,GAAG,IAAI,EAAE,CAAC,UAAU,CAAS,SAAS,EAAE;YACnD,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,GAAG,CAAC,aAAa,EAAE,CAAC;IACxB,CAAC;IAED,SAAS,KAAK;QACV,IAAM,GAAG,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAU,CAAC;QACtC,IAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,WAAW,CAAqB,IAAI,UAAU,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACnG,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAElB,IAAM,SAAS,GAAG,IAAI,EAAE,CAAC,WAAW,CAAiB,SAAS,EAAE,UAAC,CAAS;YACtE,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,GAAG,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IACvC,CAAC;IAED,SAAS,KAAK;QACV,IAAM,GAAG,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAkB,CAAC;QAE9C,IAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,WAAW,CAA6B,IAAI,UAAU,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC3G,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAElB,IAAM,SAAS,GAAG,IAAI,EAAE,CAAC,WAAW,CAAyB,SAAS,EAAE,UAAC,CAAS;YAC9E,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,GAAG,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,SAAS,KAAK;QACV,IAAM,GAAG,GAAG,IAAI,EAAE,CAAC,QAAQ,EAA0B,CAAC;QACtD,IAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,WAAW,CAAqC,IAAI,UAAU,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACnH,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAElB,IAAM,SAAS,GAAG,IAAI,EAAE,CAAC,WAAW,CAAiC,SAAS,EAAE,UAAC,CAAS;YACtF,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,GAAG,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,SAAS,KAAK;QACV,IAAM,GAAG,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAkC,CAAC;QAC9D,IAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,WAAW,CAA6C,IAAI,UAAU,EAAE,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC3H,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAElB,IAAM,SAAS,GAAG,IAAI,EAAE,CAAC,WAAW,CAAyC,SAAS,EAAE,UAAC,CAAS;YAC9F,OAAO,CAAC,GAAG,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnB,GAAG,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,CAAC;AACL,CAAC,EAjGM,QAAQ,KAAR,QAAQ,QAiGd;ACjGD,IAAO,QAAQ,CA4Cd;AA5CD,WAAO,QAAQ;IAEX,IAAO,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC;IACtC,IAAO,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;IAC1B,IAAO,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;IAC5B,IAAO,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;IAQ9B,SAAgB,YAAY;QAExB,IAAM,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;QACrD,IAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,UAAU,CAAC,aAAa,qBAA2B,CAAC;QAEpD,IAAM,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC;QACxC,UAAU,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAElD,IAAM,SAAS,GAAG,SAAS,CAAC;QAC5B,6BAA6B;QAC7B,IAAM,SAAS,GAAG,4BAA4B,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,GAAG,YAAY,CAAC;QAC5F,EAAE,CAAC,eAAe,CAAC,IAAI,CAAkB,SAAS,CAAC;aAC9C,IAAI,CAAC,UAAC,GAAoB;YACvB,EAAE,CAAC,eAAe,CAAC,IAAI,CAAa,4BAA4B,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,GAAG,MAAM,CAAC;iBACnG,IAAI,CAAC,UAAC,GAAe;gBAClB,QAAQ,CAAC,sBAAsB,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;gBAC3F,IAAM,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;gBAExC,IAAM,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChE,IAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;gBAClC,SAAS,CAAC,aAAa,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChD,SAAS,CAAC,UAAU,GAAG,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE5C,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;gBAE5C,IAAM,UAAU,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3C,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACX,CAAC;IA9Be,qBAAY,eA8B3B,CAAA;AACL,CAAC,EA5CM,QAAQ,KAAR,QAAQ,QA4Cd;AC5CD,IAAO,QAAQ,CA2Cd;AA3CD,WAAO,QAAQ;IAEX,SAAgB,YAAY;QAExB,IAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;QACxD,IAAM,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;QACxC,UAAU,CAAC,aAAa,qBAA2B,CAAC;QACpD,UAAU,CAAC,aAAa,CAAC,aAAa,cAAmB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7E,IAAM,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC;QACxC,UAAU,CAAC,aAAa,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpD,UAAU,CAAC,eAAe,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAEvD,OAAO;QACP,IAAM,IAAI,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;QACrB,OAAO;QACP,IAAM,UAAU,GAAG,EAAE,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;QACpD,UAAU,CAAC,IAAI,GAAG,cAAc,CAAC;QAEjC,IAAM,IAAI,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;QACpC,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAgB,EAAE,CAAC,UAAU,CAAC,CAAC;QACnE,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC;QAC7B,UAAU,CAAC,WAAW,CAAC,EAAE,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC,CAAC;QAC7D,oCAAoC;QACpC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAa,8BAA8B,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACzE,EAAE,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;QAClG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAM,GAAG,GAAG,IAAI,EAAE,CAAC,UAAU,EAAE,CAAC;QAEhC,IAAM,CAAC,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAM,CAAC,GAAG,CAAC,CAAC;QAEZ,WAAW,CAAC;YACR,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7E,qEAAqE;QACzE,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;IAvCe,qBAAY,eAuC3B,CAAA;AAEL,CAAC,EA3CM,QAAQ,KAAR,QAAQ,QA2Cd;AC3CD,IAAO,QAAQ,CAkDd;AAlDD,WAAO,QAAQ;IAAC,IAAA,UAAU,CAkDzB;IAlDe,WAAA,UAAU;QAEtB,iBAAiB;QACjB,eAAe;QACf,YAAY;QACZ,UAAU;QACV,gCAAgC;QAChC;YAAA;YAaA,CAAC;YAVG,sBAAW,+BAAI;qBAAf;oBACI,OAAO,IAAI,CAAC,KAAK,CAAC;gBACtB,CAAC;qBACD,UAAgB,GAAW;oBACvB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBACrB,CAAC;;;eAHA;YAKM,+BAAO,GAAd;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC;YACtB,CAAC;YACL,oBAAC;QAAD,CAbA,AAaC,IAAA;QAED,SAAgB,GAAG;YAEf,IAAM,KAAK,GAAG,IAAI,CAAC;YACnB,IAAM,OAAO,GAAG,IAAI,aAAa,EAAE,CAAC;YACpC,oCAAoC;YACpC,mBAAmB;YACnB,wBAAwB;YACxB,IAAI;YAEJ,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;aAC1B;YACD,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAEhC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAM,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC;aAC3B;YACD,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;YAElC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAM,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;aAC/B;YACD,OAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACxC,CAAC;QA1Be,cAAG,MA0BlB,CAAA;IAEL,CAAC,EAlDe,UAAU,GAAV,mBAAU,KAAV,mBAAU,QAkDzB;AAAD,CAAC,EAlDM,QAAQ,KAAR,QAAQ,QAkDd;AClDD,IAAO,QAAQ,CAyCd;AAzCD,WAAO,QAAQ;IACX,0BAA0B;IAC1B,SAAgB,WAAW;QACvB,yDAAyD;QACzD,uCAAuC;QACvC,0BAA0B;QAC1B,yBAAyB;QACzB,0BAA0B;QAC1B,kCAAkC;QAElC,SAAS,QAAQ,CAAC,CAAW,EAAE,CAAW;YACtC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC;QAOD,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAe;YAC3B,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;YACf,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YACd,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;SACjB,CAAC;QAEF,IAAM,IAAI,GAAG,IAAI,EAAE,CAAC,OAAO,CAAW,QAAQ,CAAC,CAAC;QAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACtB;QACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;SAC/B;IACL,CAAC;IAtCe,oBAAW,cAsC1B,CAAA;AACL,CAAC,EAzCM,QAAQ,KAAR,QAAQ,QAyCd;ACzCD,IAAO,QAAQ,CASd;AATD,WAAO,QAAQ;IAIX,SAAgB,cAAc;QAC1B,EAAE,CAAC,eAAe,CAAC,IAAI,CAAkB,wBAAwB,CAAC,CAAC,IAAI,CAAC,UAAU,OAAqB;YACnG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAJe,uBAAc,iBAI7B,CAAA;AACL,CAAC,EATM,QAAQ,KAAR,QAAQ,QASd;ACTD,IAAO,QAAQ,CA0Cd;AA1CD,WAAO,QAAQ;IAGX,SAAS,SAAS;QAEd,IAAM,SAAS,GAAe,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;QAEpE,IAAM,UAAU,GAAG,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC;QACxC,UAAU,CAAC,aAAa,qBAA2B,CAAC;QACpD,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC5B,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC3B,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAEtB,IAAM,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;QAC7C,UAAU,CAAC,aAAa,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpD,UAAU,CAAC,eAAe,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,SAAsB,UAAU;;;;;;wBAE5B,SAAS,EAAE,CAAC;wBAEN,SAAS,GAAe,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;wBAE5C,qBAAM,EAAE,CAAC,eAAe,CAAC,IAAI,CAAa,8BAA8B,CAAC,EAAA;;wBAA3F,GAAG,GAAe,SAAyE;wBAC3F,QAAQ,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;wBAClC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAkB,EAAE,CAAC,YAAY,CAAC,CAAC;wBAEvE,QAAQ,GAAG,EAAE,CAAC,cAAc,CAAC,wBAAwB,EAAE,CAAC;wBAC9D,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;wBACnC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;;;;;KAUrE;IAtBqB,mBAAU,aAsB/B,CAAA;AAEL,CAAC,EA1CM,QAAQ,KAAR,QAAQ,QA0Cd;AC1CD,IAAO,QAAQ,CASd;AATD,WAAO,QAAQ;IAAC,IAAA,UAAU,CASzB;IATe,WAAA,UAAU;QAKtB,SAAgB,GAAG;QAEnB,CAAC;QAFe,cAAG,MAElB,CAAA;IAEL,CAAC,EATe,UAAU,GAAV,mBAAU,KAAV,mBAAU,QASzB;AAAD,CAAC,EATM,QAAQ,KAAR,QAAQ,QASd;ACTD,IAAO,QAAQ,CA8Bd;AA9BD,WAAO,QAAQ;IAQX,eAAe;IACf,SAAgB,GAAG;QAAnB,iBAoBC;QAlBG,IAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAC/C,EAAE,CAAC,GAAG,CAAC;YACH,KAAK,EAAE,GAAG;YACV,MAAM,EAAE,IAAI;YACZ,GAAG,EAAE,GAAG;YACR,SAAS,EAAE,KAAK;YAChB,gBAAgB,EAAE;;oBACd,oBAAoB;oBACpB,eAAe;oBACf,oBAAoB;oBACpB,iBAAiB;oBACjB,6BAA6B;oBAC7B,sBAAsB;oBACtB,mBAAmB;oBACnB,SAAA,YAAY,EAAE,CAAC;;;iBAElB;SACJ,CAAC,CAAC;IACP,CAAC;IApBe,YAAG,MAoBlB,CAAA;AACL,CAAC,EA9BM,QAAQ,KAAR,QAAQ,QA8Bd;AAED,MAAM,CAAC,MAAM,GAAG;IACZ,QAAQ,CAAC,GAAG,EAAE,CAAC;AACnB,CAAC,CAAC;AAEF,SAAS,kBAAkB;IAEvB,IAAM,GAAG,GAAG,EAAE,CAAC;IAEf,IAAI,QAAqB,CAAC;IAE1B,IAAM,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;IACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAChD,IAAM,SAAS,GAAkB,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAEvD,IAAM,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAC1C,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAElI,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;QAE5D,SAAS,WAAW,CAAC,QAAsB,EAAE,IAAI;YAG7C,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE;gBAE7C,IAAM,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;gBAE9C,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAClD,WAAW,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC;gBACpC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACpG,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;aACtC;QACL,CAAC;QAED,WAAW,CAAC,SAAS,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KAC9C;IAED,OAAO,GAAG,CAAC;AACf,CAAC;AAED,SAAS,IAAI,CAAC,OAAe;IAEzB,IAAM,SAAS,GAAkB,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrH,IAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;IAE5I,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACxE,CAAC;AAED,SAAS,IAAI;IACT,IAAM,SAAS,GAAkB,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;IAClG,IAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;IAE1G,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC9B,CAAC;AAED,SAAS,SAAS,CAAC,IAAY;IAC3B,IAAM,SAAS,GAAkB,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;IAClG,OAAO,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1C,CAAC","file":"unittest.js","sourcesContent":["module UnitTest {\r\n\r\n    import SceneManager = QE.SceneManager;\r\n    import Camera = QE.Camera;\r\n    import Vector3 = QE.Vector3;\r\n    import Material = QE.Material;\r\n    import Animator = QE.Animator;\r\n    import AnimationClip = QE.AnimationClip;\r\n    import AnimatorController = QE.AnimatorController;\r\n    import KeyFrame = QE.KeyFrame;\r\n    import Transform = QE.Transform;\r\n\r\n    export function testAnimation() {\r\n\r\n        const mainScene = QE.SceneManager.instance.currentScene;\r\n        const mainCamera = QE.Camera.MainCamera;\r\n        mainCamera.setCameraType(QE.CameraType.Perspective);\r\n\r\n        const cameraNode = mainCamera.transform;\r\n        cameraNode.localPosition = new QE.Vector3(0, 0, -6);\r\n\r\n        // mesh\r\n        const mesh = QE.BuiltinResFactory.getCube();\r\n        mesh.name = 'myMesh';\r\n\r\n        const node = mainScene.createNode();\r\n\r\n        const meshRender = node.addComponent<QE.MeshRender>(QE.MeshRender);\r\n        meshRender.mesh = mesh;\r\n        meshRender.setMaterial(QE.Material.getDefaultCubeMaterial());\r\n\r\n        node.transform.localPosition = new QE.Vector3(0, 0, 0);\r\n        node.name = 'Node';\r\n        // mesh\r\n        const sphereMesh = QE.BuiltinResFactory.getSphere();\r\n        sphereMesh.name = 'mySphereMesh';\r\n\r\n        const sphereNode = mainScene.createNode(node.transform);\r\n        sphereNode.name = 'sphereNode';\r\n\r\n        const sphereMeshRender = sphereNode.addComponent<QE.MeshRender>(QE.MeshRender);\r\n        sphereMeshRender.mesh = sphereMesh;\r\n        sphereMeshRender.setMaterial(QE.Material.getDefaultCubeMaterial());\r\n\r\n        QE.ResourceManager.load<QE.Texture>('assets/assets/icon.png').then((tex: QE.Texture) => {\r\n            sphereMeshRender.getMaterial().shader.shaderPasses[0].getSamplers()[0].samplerTex = tex;\r\n\r\n            sphereNode.transform.localPosition = new QE.Vector3(1, 0, 0);\r\n            sphereNode.transform.localScale = new QE.Vector3(0.5, 0.5, 0.5);\r\n\r\n            // 添加Animator组件\r\n            const animator = node.addComponent<Animator>(Animator);\r\n\r\n            // 创建动画控制器\r\n            const animController = new AnimatorController();\r\n\r\n            // 创建动画片段\r\n            const posClip = new AnimationClip();\r\n            posClip.name = 'move';\r\n\r\n            const curveRX = new QE.AnimationCurve();\r\n            curveRX.addKeyFrameByValue(0, 0);\r\n            curveRX.addKeyFrameByValue(2000, -0);\r\n\r\n            const curveRY = new QE.AnimationCurve();\r\n            curveRY.addKeyFrameByValue(0, 0);\r\n            curveRY.addKeyFrameByValue(2000, 360);\r\n\r\n            const curveRZ = new QE.AnimationCurve();\r\n            curveRZ.addKeyFrameByValue(0, 0);\r\n            curveRZ.addKeyFrameByValue(2000, 0);\r\n\r\n            // 组装动画\r\n            // curve\r\n            posClip.addCurve('Node/sphereNode', QE.Reflection.Type.typeOf(Transform), 'localEulerAngle.x', curveRX);\r\n            posClip.addCurve('Node/sphereNode', QE.Reflection.Type.typeOf(Transform), 'localEulerAngle.y', curveRY);\r\n            posClip.addCurve('Node/sphereNode', QE.Reflection.Type.typeOf(Transform), 'localEulerAngle.z', curveRZ);\r\n\r\n            const curveTX = new QE.AnimationCurve();\r\n            curveTX.addKeyFrameByValue(0, 1);\r\n            curveTX.addKeyFrameByValue(2000, 2);\r\n\r\n            const curveTY = new QE.AnimationCurve();\r\n            curveTY.addKeyFrameByValue(0, 0);\r\n            curveTY.addKeyFrameByValue(2000, 0);\r\n\r\n            const curveTZ = new QE.AnimationCurve();\r\n            curveTZ.addKeyFrameByValue(0, 0);\r\n            curveTZ.addKeyFrameByValue(2000, 0);\r\n\r\n            //\r\n            posClip.addCurve('Node/sphereNode', QE.Reflection.Type.typeOf(Transform), 'localPosition.x', curveTX);\r\n            posClip.addCurve('Node/sphereNode', QE.Reflection.Type.typeOf(Transform), 'localPosition.y', curveTY);\r\n            posClip.addCurve('Node/sphereNode', QE.Reflection.Type.typeOf(Transform), 'localPosition.z', curveTZ);\r\n\r\n            posClip.length = 2000;\r\n\r\n            animController.addClip(posClip);\r\n            animator.animController = animController;\r\n\r\n            animator.play('move');\r\n        });\r\n    }\r\n}\r\n","module UnitTest {\r\n\r\n    class TestComponent extends QE.Component {\r\n\r\n        onLoad = function () {\r\n            console.log('UnitTest.TestComponent onLoad');\r\n        };\r\n\r\n        onUpdate = function () {\r\n            console.log('UnitTest.TestComponent onUpdate');\r\n        };\r\n\r\n    }\r\n\r\n    export function testComponent() {\r\n\r\n        const mainScene = QE.SceneManager.instance.currentScene;\r\n\r\n        const emptyNode = mainScene.createNode();\r\n\r\n        const testComponent = emptyNode.addComponent<TestComponent>(TestComponent);\r\n\r\n        return testComponent;\r\n    }\r\n\r\n}\r\n","module UnitTest {\r\n    class TestCaller {\r\n        m() {\r\n            console.log('TestCaller m');\r\n        }\r\n\r\n        m1(a: string) {\r\n            console.log('TestCaller m1: ' + a);\r\n        }\r\n\r\n        m2(a: string, b: number) {\r\n            console.log('TestCaller m2: ' + a + ' b:' + b);\r\n        }\r\n\r\n        m3(a: string, b: number, c: number) {\r\n            console.log('TestCaller m3: ' + a + ' b: ' + b + ' c:' + c);\r\n        }\r\n\r\n        m4(a: string, b: number, c: number, d: number) {\r\n            console.log('TestCaller m4: ' + a + ' b: ' + b + ' c:' + c + ' d: ' + d);\r\n        }\r\n    }\r\n\r\n    export function testEvent() {\r\n        test();\r\n        test1();\r\n        test2();\r\n        test3();\r\n        test4();\r\n    }\r\n\r\n    function test() {\r\n        const evt = new QE.QEEvent();\r\n\r\n        const listener = new QE.QEListener<TestCaller>(new TestCaller(), TestCaller.prototype.m);\r\n        evt.add(listener);\r\n\r\n        const listener2 = new QE.QEListener<Object>(undefined, () => {\r\n            console.log('QEListener<Object, string>');\r\n        });\r\n        evt.add(listener2);\r\n\r\n        evt.dispatchEvent();\r\n    }\r\n\r\n    function test1() {\r\n        const evt = new QE.QEEvent1<string>();\r\n        const listener = new QE.QEListener1<TestCaller, string>(new TestCaller(), TestCaller.prototype.m1);\r\n        evt.add(listener);\r\n\r\n        const listener2 = new QE.QEListener1<Object, string>(undefined, (a: string) => {\r\n            console.log('QEListener1<Object, string>: ' + a);\r\n        });\r\n        evt.add(listener2);\r\n\r\n        evt.dispatchEvent('fuck xiaoming');\r\n    }\r\n\r\n    function test2() {\r\n        const evt = new QE.QEEvent2<string, number>();\r\n\r\n        const listener = new QE.QEListener2<TestCaller, string, number>(new TestCaller(), TestCaller.prototype.m2);\r\n        evt.add(listener);\r\n\r\n        const listener2 = new QE.QEListener2<Object, string, number>(undefined, (a: string) => {\r\n            console.log('QEListener2<Object, string>: ' + a);\r\n        });\r\n        evt.add(listener2);\r\n\r\n        evt.dispatchEvent('fuck xiaoming', 1);\r\n    }\r\n\r\n    function test3() {\r\n        const evt = new QE.QEEvent3<string, number, number>();\r\n        const listener = new QE.QEListener3<TestCaller, string, number, number>(new TestCaller(), TestCaller.prototype.m3);\r\n        evt.add(listener);\r\n\r\n        const listener2 = new QE.QEListener3<Object, string, number, number>(undefined, (a: string) => {\r\n            console.log('QEListener3<Object, string>: ' + a);\r\n        });\r\n        evt.add(listener2);\r\n\r\n        evt.dispatchEvent('fuck xiaoming', 1, 2);\r\n    }\r\n\r\n    function test4() {\r\n        const evt = new QE.QEEvent4<string, number, number, number>();\r\n        const listener = new QE.QEListener4<TestCaller, string, number, number, number>(new TestCaller(), TestCaller.prototype.m4);\r\n        evt.add(listener);\r\n\r\n        const listener2 = new QE.QEListener4<Object, string, number, number, number>(undefined, (a: string) => {\r\n            console.log('QEListener4<Object, string>: ' + a);\r\n        });\r\n        evt.add(listener2);\r\n\r\n        evt.dispatchEvent('fuck xiaoming', 1, 2, 3);\r\n    }\r\n}\r\n","module UnitTest {\r\n\r\n    import SceneManager = QE.SceneManager;\r\n    import Camera = QE.Camera;\r\n    import Vector3 = QE.Vector3;\r\n    import Material = QE.Material;\r\n    import Animator = QE.Animator;\r\n    import AnimationClip = QE.AnimationClip;\r\n    import AnimatorController = QE.AnimatorController;\r\n    import AnimationCurve = QE.AnimationCurve;\r\n    import KeyFrame = QE.KeyFrame;\r\n    import Transform = QE.Transform;\r\n\r\n    export function testFbxModel() {\r\n\r\n        const mainScene = SceneManager.instance.currentScene;\r\n        const mainCamera = Camera.MainCamera;\r\n        mainCamera.setCameraType(QE.CameraType.Perspective);\r\n\r\n        const cameraNode = mainCamera.transform;\r\n        cameraNode.localPosition = new Vector3(0, 0, -10);\r\n\r\n        const modelName = 'jianshi';\r\n        //    let modelName = \"chan\";\r\n        const modelPath = 'UnitTest/assets/res/model/' + modelName + '/' + modelName + '.mesh.json';\r\n        QE.ResourceManager.load<QE.TextResource>(modelPath)\r\n            .then((res: QE.TextResource) => {\r\n                QE.ResourceManager.load<QE.Texture>('UnitTest/assets/res/model/' + modelName + '/' + modelName + '.png')\r\n                    .then((tex: QE.Texture) => {\r\n                        Material.getDefaultCubeMaterial().shader.shaderPasses[0].getSamplers()[0].samplerTex = tex;\r\n                        const rootNode = mainScene.createNode();\r\n\r\n                        const model = QE.MeshSerializer.loadModel(JSON.parse(res.text));\r\n                        const transform = model.transform;\r\n                        transform.localPosition = new Vector3(0, -1, 0);\r\n                        transform.localScale = new Vector3(1, 1, 1);\r\n\r\n                        rootNode.transform.parent = model.transform;\r\n\r\n                        const eulerAngle = new QE.Vector3(0, 0, 0);\r\n                        rootNode.transform.localRotation = rootNode.transform.localRotation.fromEulerAngle(eulerAngle);\r\n                    });\r\n            });\r\n    }\r\n}\r\n","module UnitTest {\r\n\r\n    export function testGeometry() {\r\n\r\n        const mainScene = QE.SceneManager.instance.currentScene;\r\n        const mainCamera = QE.Camera.MainCamera;\r\n        mainCamera.setCameraType(QE.CameraType.Perspective);\r\n        mainCamera.renderContext.setColorClear(QE.ClearMask.ALL, [0, 0, 0, 0], 1, 0);\r\n\r\n        const cameraNode = mainCamera.transform;\r\n        cameraNode.localPosition = new QE.Vector3(0, 0, -3);\r\n        cameraNode.localEulerAngle = new QE.Vector3(45, 45, 0);\r\n\r\n        // mesh\r\n        const mesh = QE.BuiltinResFactory.getCube();\r\n        mesh.name = 'myMesh';\r\n        // mesh\r\n        const sphereMesh = QE.BuiltinResFactory.getSphere();\r\n        sphereMesh.name = 'mySphereMesh';\r\n\r\n        const node = mainScene.createNode();\r\n        const meshRender = node.addComponent<QE.MeshRender>(QE.MeshRender);\r\n        meshRender.mesh = sphereMesh;\r\n        meshRender.setMaterial(QE.Material.getDefaultCubeMaterial());\r\n        // meshRender.getMaterial().textures\r\n        QE.ResourceManager.load<QE.Texture>('UnitTest/assets/res/icon.png').then((tex) => {\r\n            QE.Material.getDefaultCubeMaterial().shader.shaderPasses[0].getSamplers()[0].samplerTex = tex;\r\n        });\r\n\r\n        node.transform.localPosition = new QE.Vector3(0, 0, 0);\r\n        node.name = 'Node';\r\n        const rot = new QE.Quaternion();\r\n\r\n        const x = 0;\r\n        let y = 0;\r\n        const z = 0;\r\n\r\n        setInterval(function () {\r\n            node.transform.localRotation = rot.fromEulerAngle(new QE.Vector3(x, y++, z));\r\n            // node.transform.localPosition = new QE.Vector3((x++) * 0.01, 0, 0);\r\n        }, 100);\r\n    }\r\n\r\n}\r\n","module UnitTest.TestGetSet {\r\n\r\n    // 测试js不同方式获取值的性能\r\n    // 1. get set方法\r\n    // 2. 直接读取属性\r\n    // 3. 函数取值\r\n    // 结果：第一种和第三中差别不大，这两种耗时约等于第二种的十倍\r\n    class TestGetSetObj {\r\n\r\n        public _hehe: string;\r\n        public get hehe() {\r\n            return this._hehe;\r\n        }\r\n        public set hehe(val: string) {\r\n            this._hehe = val;\r\n        }\r\n\r\n        public getHehe() {\r\n            return this._hehe;\r\n        }\r\n    }\r\n\r\n    export function run() {\r\n\r\n        const count = 1000;\r\n        const testObj = new TestGetSetObj();\r\n        // for (let i = 0; i < count; i++) {\r\n        //    array[i] = i;\r\n        //    floatArray[i] = i;\r\n        // }\r\n\r\n        console.time('get function');\r\n        for (let i = 0; i < count; i++) {\r\n            const t = testObj.hehe;\r\n        }\r\n        console.timeEnd('get function');\r\n\r\n        console.time('property value');\r\n        for (let i = 0; i < count; i++) {\r\n            const t = testObj._hehe;\r\n        }\r\n        console.timeEnd('property value');\r\n\r\n        console.time('getHehe function');\r\n        for (let i = 0; i < count; i++) {\r\n            const t = testObj.getHehe();\r\n        }\r\n        console.timeEnd('getHehe function');\r\n    }\r\n\r\n}\r\n","module UnitTest {\r\n    // 最小堆：根结点的键值是所有堆结点键值中最小者。\r\n    export function testMinHeap() {\r\n        // let k, n = 11, a = [0, 5, 2, 4, 9, 7, 3, 1, 10, 8, 6];\r\n        // let test = new QE.MinHeap<number>();\r\n        // for (k = 0; k < n; k++)\r\n        //    test.enqueue(a[k]);\r\n        // for (k = 0; k < n; k++)\r\n        //    console.log(test.dequeue());\r\n\r\n        function comparer(x: TestData, y: TestData): number {\r\n            return x.v - y.v;\r\n        }\r\n\r\n        interface TestData {\r\n            v: number;\r\n            b: number;\r\n        }\r\n\r\n        let k, n = 11, a: TestData[] = [\r\n            { v: 0, b: 2 },\r\n            { v: 5, b: 2 },\r\n            { v: 2, b: 2 },\r\n            { v: 4, b: 2 },\r\n            { v: 9, b: 2 },\r\n            { v: 7, b: 2 },\r\n            { v: 3, b: 2 },\r\n            { v: 1, b: 2 },\r\n            { v: 10, b: 2 },\r\n            { v: 8, b: 2 },\r\n            { v: 6, b: 2 }\r\n        ];\r\n\r\n        const test = new QE.MinHeap<TestData>(comparer);\r\n        for (k = 0; k < n; k++) {\r\n            test.enqueue(a[k]);\n        }\r\n        for (k = 0; k < n; k++) {\r\n            console.log(test.dequeue());\n        }\r\n    }\r\n}\r\n","module UnitTest {\r\n\r\n    import TextResource = QE.TextResource;\r\n\r\n    export function testTextLoader() {\r\n        QE.ResourceManager.load<QE.TextResource>('assets/assets/test.txt').then(function (textRes: TextResource) {\r\n            console.log(textRes.text);\r\n        });\r\n    }\r\n}\r\n","module UnitTest {\r\n\r\n\r\n    function initScene() {\r\n\r\n        const mainScene: QE.Scene3D = QE.SceneManager.instance.currentScene;\r\n\r\n        const mainCamera = QE.Camera.MainCamera;\r\n        mainCamera.setCameraType(QE.CameraType.Perspective);\r\n        mainCamera.setNearClip(0.1);\r\n        mainCamera.setFarClip(100);\r\n        mainCamera.setFOV(45);\r\n\r\n        const cameraNode = mainCamera.node.transform;\r\n        cameraNode.localPosition = new QE.Vector3(0, 0, -3);\r\n        cameraNode.localEulerAngle = new QE.Vector3(0, 0, 0);\r\n    }\r\n\r\n    export async function testSprite() {\r\n\r\n        initScene();\r\n\r\n        const mainScene: QE.Scene3D = QE.SceneManager.instance.currentScene;\r\n\r\n        const tex: QE.Texture = await QE.ResourceManager.load<QE.Texture>('UnitTest/assets/res/icon.png');\r\n        const meshNode = mainScene.createNode();\r\n        const spriteRender = meshNode.addComponent<QE.SpriteRender>(QE.SpriteRender);\r\n\r\n        const material = QE.SpriteMaterial.getDefaultSpriteMaterial();\r\n        spriteRender.setMaterial(material);\r\n        material.shader.shaderPasses[0].getSamplers()[0].samplerTex = tex;\r\n        //\r\n        // meshNode.transform.localPosition = new QE.Vector3(0.1 * i, 0.1 * i, 1 * 0.1);\r\n\r\n        // setTimeout(function () {\r\n        //     meshNode.transform.localPosition = new QE.Vector3(\r\n        //     meshNode.transform.localPosition.x + 0.1,\r\n        //     meshNode.transform.localPosition.y + 0.1 , 1);\r\n        // }, this);\r\n\r\n    }\r\n\r\n}\r\n","module UnitTest.TestMatrix {\r\n\r\n    import Matrix4 = QE.Matrix4;\r\n    import Vector3 = QE.Vector3;\r\n\r\n    export function run() {\r\n\r\n    }\r\n\r\n}\r\n","module UnitTest {\r\n\r\n    export interface ITestCase {\r\n        name: string;\r\n        desc: string;\r\n        call: (params?: any) => void;\r\n    }\r\n\r\n    // TODO: 重构测试框架\r\n    export function run() {\r\n\r\n        const div = document.getElementById('gameDiv');\r\n        QE.run({\r\n            width: 720,\r\n            height: 1280,\r\n            div: div,\r\n            debugMode: false,\r\n            onEnginePrepared: async () => {\r\n                // testTextLoader();\r\n                // testEvent();\r\n                // TestGetSet.run();\r\n                // testMinHeap();\r\n                // UnitTest.TestMatrix.run();\r\n                // await testSprite();\r\n                // testAnimation();\r\n                testGeometry();\r\n                // testFbxModel();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nwindow.onload = () => {\r\n    UnitTest.run();\r\n};\r\n\r\nfunction dumpSceneHierarchy() {\r\n\r\n    const obj = {};\r\n\r\n    let animator: QE.Animator;\r\n\r\n    const currScene = QE.SceneManager.instance.currentScene;\r\n    for (let i = 0; i < currScene.children.length; i++) {\r\n        const rootChild: QE.GameObject = currScene.children[i];\r\n\r\n        const childObj = obj[rootChild.name] = {};\r\n        childObj['pos'] = [rootChild.transform.localPosition.x, rootChild.transform.localPosition.y, rootChild.transform.localPosition.z];\r\n\r\n        animator = rootChild.getComponent<QE.Animator>(QE.Animator);\r\n\r\n        function searchChild(rootNode: QE.Transform, dict) {\r\n\r\n\r\n            for (let ii = 0; ii < rootNode.childCount; ii++) {\r\n\r\n                const subChild = rootNode.getChildByIndex(ii);\r\n\r\n                const subChildObj = dict[subChild.node.name] = {};\r\n                subChildObj['node'] = subChild.node;\r\n                subChildObj['pos'] = [subChild.localPosition.x, subChild.localPosition.y, subChild.localPosition.z];\r\n                searchChild(subChild, subChildObj);\r\n            }\r\n        }\r\n\r\n        searchChild(rootChild.transform, childObj);\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nfunction step(timePos: number) {\r\n\r\n    const rootChild: QE.GameObject = QE.SceneManager.instance.currentScene.children[1].transform.getChildByIndex(0).node;\r\n    const animator = QE.SceneManager.instance.currentScene.children[1].transform.getChildByIndex(0).node.getComponent<QE.Animator>(QE.Animator);\r\n\r\n    animator.animController.animationClips[0].apply(rootChild, timePos);\r\n}\r\n\r\nfunction play() {\r\n    const rootChild: QE.GameObject = QE.SceneManager.instance.currentScene.children[1].transform.node;\r\n    const animator = QE.SceneManager.instance.currentScene.children[1].getComponent<QE.Animator>(QE.Animator);\r\n\r\n    animator.play('Take 001');\r\n}\r\n\r\nfunction findChild(name: string) {\r\n    const rootChild: QE.GameObject = QE.SceneManager.instance.currentScene.children[1].transform.node;\r\n    return rootChild.transform.find(name);\r\n}\r\n"]}